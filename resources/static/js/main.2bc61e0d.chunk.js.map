{"version":3,"sources":["App.js","custom-element/et-app.js"],"names":["App","name","nameTwo","templateId","contentId","contentName","console","log","ATTRIBUTES","selectedTemplateId","selectedContentId","selectedContentName","WidgetElement","oldValue","newValue","Object","values","includes","Error","this","mountPoint","render","document","createElement","appendChild","getAttribute","ReactDOM","HTMLElement","customElements","define"],"mappings":"0OAceA,MATf,YAAqE,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YAEjD,OADAC,QAAQC,IAAIN,EAAMC,EAASC,EAAYC,EAAWC,GAE9C,mCACI,uDCLNG,EAAa,CACfP,KAAM,OACNC,QAAS,UACTO,mBAAoB,qBACpBC,kBAAmB,oBACnBC,oBAAqB,uBAGnBC,E,8KAMF,SAAyBX,EAAMY,EAAUC,GACrC,IAAKC,OAAOC,OAAOR,GAAYS,SAAShB,GACpC,MAAM,IAAIiB,MAAJ,uCAA0CjB,IAEhDkB,KAAKC,YAAcN,IAAaD,GAChCM,KAAKE,W,+BAIb,WACIF,KAAKC,WAAaE,SAASC,cAAc,OACzCJ,KAAKK,YAAYL,KAAKC,YACtBD,KAAKE,W,oBAGT,WACI,IAAMpB,EAAOkB,KAAKM,aAAajB,EAAWP,MACpCC,EAAUiB,KAAKM,aAAajB,EAAWN,SACvCC,EAAagB,KAAKM,aAAajB,EAAWC,oBAC1CL,EAAYe,KAAKM,aAAajB,EAAWE,mBACzCL,EAAcc,KAAKM,aAAajB,EAAWG,qBACjDe,IAASL,OACL,cAAC,EAAD,CAAKpB,KAAMA,EAAMC,QAASA,EAASC,WAAYA,EAAYC,UAAWA,EAAWC,YAAaA,IAC9Fc,KAAKC,e,+BA3Bb,WACI,OAAOL,OAAOC,OAAOR,O,eAHDmB,cAkC5BC,eAAeC,OAAO,YAAajB,K","file":"static/js/main.2bc61e0d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './app.css';\n\nconst domain = 'http://localhost:1337'\n\nfunction App({ name, nameTwo, templateId, contentId, contentName }) {\n    console.log(name, nameTwo, templateId, contentId, contentName);\n    return (\n        <>\n            <p>Entando has Ent CMD</p>\n        </>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from '../App'\n\nconst ATTRIBUTES = {\n    name: 'name',\n    nameTwo: 'nameTwo',\n    selectedTemplateId: 'selectedTemplateId',\n    selectedContentId: 'selectedContentId',\n    selectedContentName: 'selectedContentName',\n};\n\nclass WidgetElement extends HTMLElement {\n\n    static get observedAttributes() {\n        return Object.values(ATTRIBUTES);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (!Object.values(ATTRIBUTES).includes(name)) {\n            throw new Error(`Untracked changed attribute: ${name}`);\n        }\n        if (this.mountPoint && newValue !== oldValue) {\n            this.render();\n        }\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        this.render();\n    }\n\n    render() {\n        const name = this.getAttribute(ATTRIBUTES.name);\n        const nameTwo = this.getAttribute(ATTRIBUTES.nameTwo);\n        const templateId = this.getAttribute(ATTRIBUTES.selectedTemplateId);\n        const contentId = this.getAttribute(ATTRIBUTES.selectedContentId);\n        const contentName = this.getAttribute(ATTRIBUTES.selectedContentName);\n        ReactDOM.render(\n            <App name={name} nameTwo={nameTwo} templateId={templateId} contentId={contentId} contentName={contentName} />,\n            this.mountPoint\n        );\n    }\n}\n\ncustomElements.define('my-widget', WidgetElement);\n\nexport default WidgetElement;\n\n"],"sourceRoot":""}